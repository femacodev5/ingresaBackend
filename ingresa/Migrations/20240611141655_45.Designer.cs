// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ingresa.Context;

#nullable disable

namespace ingresa.Migrations
{
    [DbContext(typeof(AppDBcontext))]
    [Migration("20240611141655_45")]
    partial class _45
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ingresa.Models.ArchivoContrato", b =>
                {
                    b.Property<int>("ArchivoContratoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArchivoContratoId"));

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<string>("FileContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArchivoContratoId");

                    b.HasIndex("ContratoId");

                    b.ToTable("ArchivoContratos");
                });

            modelBuilder.Entity("ingresa.Models.Asistencia", b =>
                {
                    b.Property<int>("AsistenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsistenciaId"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoDescanso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("FinDescansoId")
                        .HasColumnType("int");

                    b.Property<int>("FinMarcacionId")
                        .HasColumnType("int");

                    b.Property<int>("InicioDescansoId")
                        .HasColumnType("int");

                    b.Property<int>("InicioMarcacionId")
                        .HasColumnType("int");

                    b.Property<int>("MinutosAsistencia")
                        .HasColumnType("int");

                    b.Property<int>("empID")
                        .HasColumnType("int");

                    b.HasKey("AsistenciaId");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("ingresa.Models.Contrato", b =>
                {
                    b.Property<int>("ContratoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContratoId"));

                    b.Property<int>("EmpID")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("FechaConclucionContrato")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Vacaciones")
                        .HasColumnType("int");

                    b.HasKey("ContratoId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("ingresa.Models.DetalleTurno", b =>
                {
                    b.Property<int>("DetalleTurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleTurnoId"));

                    b.Property<int>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("FinMarcacionDescanso")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("FinMarcacionEntrada")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("FinMarcacionSalida")
                        .HasColumnType("time");

                    b.Property<bool>("HabilitarDescanso")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("HoraEntrada")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraSalida")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("InicioMarcacionDescanso")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("InicioMarcacionEntrada")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("InicioMarcacionSalida")
                        .HasColumnType("time");

                    b.Property<int>("MinutosDescanso")
                        .HasColumnType("int");

                    b.Property<int>("MinutosJornada")
                        .HasColumnType("int");

                    b.Property<int>("MinutosJornadaNeto")
                        .HasColumnType("int");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("DetalleTurnoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("DetalleTurnos");
                });

            modelBuilder.Entity("ingresa.Models.EmpleadoTurno", b =>
                {
                    b.Property<int>("EmpleadoTurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoTurnoId"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoTurnoId");

                    b.ToTable("EmpleadoTurnos");
                });

            modelBuilder.Entity("ingresa.Models.Feriado", b =>
                {
                    b.Property<int>("FeriadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeriadoId"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeriadoId");

                    b.ToTable("Feriados");
                });

            modelBuilder.Entity("ingresa.Models.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GrupoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("ingresa.Models.Marcacion", b =>
                {
                    b.Property<int>("MarcacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarcacionId"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("empID")
                        .HasColumnType("int");

                    b.HasKey("MarcacionId");

                    b.ToTable("Marcaciones");
                });

            modelBuilder.Entity("ingresa.Models.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("PersonaId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("ingresa.Models.Turno", b =>
                {
                    b.Property<int>("TurnoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnoId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TurnoId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("ingresa.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ingresa.Models.ArchivoContrato", b =>
                {
                    b.HasOne("ingresa.Models.Contrato", "Contrato")
                        .WithMany("ArchivosContratos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("ingresa.Models.DetalleTurno", b =>
                {
                    b.HasOne("ingresa.Models.Turno", "Turno")
                        .WithMany("DetalleTurnos")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("ingresa.Models.Persona", b =>
                {
                    b.HasOne("ingresa.Models.Grupo", "Grupo")
                        .WithMany("Persona")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ingresa.Models.Turno", "Turno")
                        .WithMany("Personas")
                        .HasForeignKey("TurnoId");

                    b.Navigation("Grupo");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("ingresa.Models.Usuario", b =>
                {
                    b.HasOne("ingresa.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("ingresa.Models.Contrato", b =>
                {
                    b.Navigation("ArchivosContratos");
                });

            modelBuilder.Entity("ingresa.Models.Grupo", b =>
                {
                    b.Navigation("Persona");
                });

            modelBuilder.Entity("ingresa.Models.Turno", b =>
                {
                    b.Navigation("DetalleTurnos");

                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
